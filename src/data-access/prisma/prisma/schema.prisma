// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  phone          String        @unique()
  account_status String        @default("un_verify") //verify,un_verify ,blocks
  otp            OTP?
  refreshToken   RefreshToken? @relation(fields: [refreshTokenId], references: [id])
  refreshTokenId String?
  access_token   AccessToken?  @relation(fields: [acessTokenId], references: [id])
  acessTokenId   String?
  Subject        Subject?
}

model OTP {
  id         String   @id @default(uuid())
  code       String
  expiration DateTime
  User       User     @relation(fields: [userId], references: [id])
  userId     String   @unique()
}

// refresh token
model RefreshToken {
  id              String       @id @default(uuid())
  token           String
  createion_date  DateTime     @default(now())
  expiration_date DateTime
  User            User[]
  accessToken     AccessToken? @relation(fields: [acessTokenId], references: [id])
  acessTokenId    String?      @unique
}

// access token
model AccessToken {
  id              String        @id @default(uuid())
  token           String
  createion_date  DateTime      @default(now())
  expiration_date DateTime
  refreshTokenId  String
  RefreshToken    RefreshToken?
  User            User[]
}

// Policy
model Policy {
  id            String         @id @default(uuid())
  name          String
  index         String
  resource      Resource       @relation(fields: [resourceId], references: [id])
  resourceId    String
  action        Action         @relation(fields: [actionId], references: [id])
  actionId      String
  environment   Environment?   @relation(fields: [environmentId], references: [id])
  environmentId String?
  Departmental  Departmental[]
}

// Subject
model Subject {
  id                String       @id @default(uuid())
  departmental      Departmental @relation(fields: [departmentalId], references: [id])
  managemant_levele String
  user              User         @relation(fields: [userId], references: [id])
  userId            String       @unique()
  departmentalId    String
}

// Departmental
model Departmental {
  id       String    @id @default(uuid())
  name     String
  index    String
  policy   Policy    @relation(fields: [policyId], references: [id])
  policyId String
  Subject  Subject[]
}

// Resource
model Resource {
  id     String   @id @default(uuid())
  name   String
  index  String
  type   String
  Policy Policy[]
}

// Action
model Action {
  id     String   @id @default(uuid())
  name   String
  index  String
  action String //create read update delete 
  Policy Policy[]
}

// Environment
model Environment {
  id             String   @id @default(uuid())
  name           String
  index          String
  day_time       DateTime
  location       String
  access_attempt Int
  Policy         Policy[]
}
